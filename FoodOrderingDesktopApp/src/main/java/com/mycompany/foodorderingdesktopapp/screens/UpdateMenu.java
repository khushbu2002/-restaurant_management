/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.foodorderingdesktopapp.screens;

import Interfaces.Values;
import static Interfaces.Values.UPDATE_SUCCESSFUL;
import com.mycompany.foodorderingdesktopapp.database_connectivity.ConnectionClass;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.UserModel;

/**
 *
 * @author acer
 */
public class UpdateMenu extends javax.swing.JFrame implements Values{

    private final UserModel currentUser;

    /**
     * Creates new form UpdateMenu
     */
    public UpdateMenu(UserModel user) {
        initComponents();
        currentUser=user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        headingLabel = new javax.swing.JPanel();
        menuPageLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        addDeleteUpdateTabbedPanel = new javax.swing.JTabbedPane();
        addMenuDishButton = new javax.swing.JPanel();
        addDishNameLabel = new javax.swing.JLabel();
        addCategoryLabel = new javax.swing.JLabel();
        addDishNameTF = new javax.swing.JTextField();
        addNewDishButton = new javax.swing.JButton();
        addCategoryComboBox = new javax.swing.JComboBox<>();
        updateMenuPanel = new javax.swing.JPanel();
        updateDishNameButton = new javax.swing.JLabel();
        updateCategoryLabel = new javax.swing.JLabel();
        updateDishNameTF = new javax.swing.JTextField();
        updateNewDishNameButton = new javax.swing.JButton();
        updateNewNameTF = new javax.swing.JTextField();
        updateNewDishNameLabel = new javax.swing.JLabel();
        updateCategoryComboBox = new javax.swing.JComboBox<>();
        deleteDishPanel = new javax.swing.JPanel();
        deleteDishLabel = new javax.swing.JLabel();
        deleteDishNameTF = new javax.swing.JTextField();
        deleteDishfromMenuButton = new javax.swing.JButton();
        categoryButton = new javax.swing.JLabel();
        removeCategoryComboBox = new javax.swing.JComboBox<>();
        addDeleteUpdateDishButtonPanel = new javax.swing.JPanel();
        addDishButton = new javax.swing.JButton();
        deleteDishButton = new javax.swing.JButton();
        updateDishButton = new javax.swing.JButton();
        menuTableScrollPane = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 450));

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        backgroundPanel.setMinimumSize(new java.awt.Dimension(800, 450));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(800, 450));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headingLabel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuPageLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        menuPageLabel.setText("Menu Page");
        headingLabel.add(menuPageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 32, -1, -1));

        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        headingLabel.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(728, 23, -1, -1));

        backgroundPanel.add(headingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 800, 80));

        addDeleteUpdateTabbedPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        addDeleteUpdateTabbedPanel.setPreferredSize(new java.awt.Dimension(314, 185));

        addMenuDishButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addDishNameLabel.setText("Dish Name");
        addMenuDishButton.add(addDishNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        addCategoryLabel.setText("Category");
        addMenuDishButton.add(addCategoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        addDishNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDishNameTFActionPerformed(evt);
            }
        });
        addMenuDishButton.add(addDishNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 200, -1));

        addNewDishButton.setText("ADD");
        addNewDishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewDishButtonActionPerformed(evt);
            }
        });
        addMenuDishButton.add(addNewDishButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        addCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addMenuDishButton.add(addCategoryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 200, -1));

        addDeleteUpdateTabbedPanel.addTab("AM", addMenuDishButton);

        updateMenuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updateDishNameButton.setText("Dish Name");
        updateMenuPanel.add(updateDishNameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        updateCategoryLabel.setText("Category");
        updateMenuPanel.add(updateCategoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, -1));
        updateMenuPanel.add(updateDishNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 190, -1));

        updateNewDishNameButton.setText("UPDATE");
        updateNewDishNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNewDishNameButtonActionPerformed(evt);
            }
        });
        updateMenuPanel.add(updateNewDishNameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, -1, -1));

        updateNewNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNewNameTFActionPerformed(evt);
            }
        });
        updateMenuPanel.add(updateNewNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 190, -1));

        updateNewDishNameLabel.setText("New Name");
        updateMenuPanel.add(updateNewDishNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, 20));

        updateCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        updateMenuPanel.add(updateCategoryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 190, -1));

        addDeleteUpdateTabbedPanel.addTab("UM", updateMenuPanel);

        deleteDishPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deleteDishLabel.setText("Dish Name");
        deleteDishPanel.add(deleteDishLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        deleteDishNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDishNameTFActionPerformed(evt);
            }
        });
        deleteDishPanel.add(deleteDishNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 200, -1));

        deleteDishfromMenuButton.setText("REMOVE");
        deleteDishfromMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDishfromMenuButtonActionPerformed(evt);
            }
        });
        deleteDishPanel.add(deleteDishfromMenuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        categoryButton.setText("Category");
        deleteDishPanel.add(categoryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 50, -1));

        removeCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        deleteDishPanel.add(removeCategoryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 200, -1));

        addDeleteUpdateTabbedPanel.addTab("RM", deleteDishPanel);

        backgroundPanel.add(addDeleteUpdateTabbedPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 640, 180));

        addDeleteUpdateDishButtonPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addDishButton.setText("Add Dish");
        addDishButton.setPreferredSize(new java.awt.Dimension(123, 22));
        addDishButton.setVerifyInputWhenFocusTarget(false);
        addDishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDishButtonActionPerformed(evt);
            }
        });
        addDeleteUpdateDishButtonPanel.add(addDishButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 123, 22));

        deleteDishButton.setText("Delete Dish");
        deleteDishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDishButtonActionPerformed(evt);
            }
        });
        addDeleteUpdateDishButtonPanel.add(deleteDishButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 123, 22));

        updateDishButton.setText("Update Dish");
        updateDishButton.setPreferredSize(new java.awt.Dimension(123, 22));
        updateDishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDishButtonActionPerformed(evt);
            }
        });
        addDeleteUpdateDishButtonPanel.add(updateDishButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 123, 22));

        backgroundPanel.add(addDeleteUpdateDishButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 160, 190));

        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        menuTableScrollPane.setViewportView(menuTable);

        backgroundPanel.add(menuTableScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 800, 250));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        if(currentUser.getRole()==ADMIN_ROLE){
            new HomeScreenForAdmin(currentUser).setVisible(true);
            dispose();
        }else if(currentUser.getRole()==MANAGER_ROLE){
            new HomeScreenForManager(currentUser).setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void addDishNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDishNameTFActionPerformed

    }//GEN-LAST:event_addDishNameTFActionPerformed

    private void addNewDishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewDishButtonActionPerformed

        String username = addDishNameTF.getText();
        String password = .getText();
        int role=MANAGER_ROLE;

        if (username.isBlank()) {
            JOptionPane.showMessageDialog(null, "username is blank");
            return;
        }
        if (password.isBlank()) {
            JOptionPane.showMessageDialog(null, "password is blank");
            return;
        }

        int answer = addUser(username,password,role);
        if(answer==USERNAME_ALREAD_IN_USE){
            JOptionPane.showMessageDialog(null, "username used");
            return;
        }
        if(answer==USER_ADDED){
            JOptionPane.showMessageDialog(null, "Manager added");
            addDishNameTF.setText("");
            addCategoryTF.setText("");
            updateManagerTable();
            return;
        }

        if(answer==USER_NOT_ADDED){
            JOptionPane.showMessageDialog(null, "No manager added");
            addDishNameTF.setText("");
            addCategoryTF.setText("");
        }
    }//GEN-LAST:event_addNewDishButtonActionPerformed

    private void deleteDishNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDishNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteDishNameTFActionPerformed

    private void deleteDishfromMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDishfromMenuButtonActionPerformed

        String username =deleteDishNameTF.getText();
        UserModel user=userExist(username);
        if(user==null){
            JOptionPane.showMessageDialog(null, "No such manager exist");
            return;
        }
        int userRole=user.getRole();
        if(userRole!=MANAGER_ROLE){
            JOptionPane.showMessageDialog(null, "No such manager exist");
        }

        boolean managerDeleted=deleteUser(user.getUsername());

        if(managerDeleted){
            updateManagerTable();
            JOptionPane.showMessageDialog(null, "Manager deleted");
        }else{
            JOptionPane.showMessageDialog(null, "Manager not deleted");
        }
    }//GEN-LAST:event_deleteDishfromMenuButtonActionPerformed

    private void updateNewDishNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNewDishNameButtonActionPerformed

        String username = updateDishNameTF.getText();
        UserModel user=userExist(username);
        if(user==null){
            JOptionPane.showMessageDialog(null, "No Such User Exist");
            return;
        }
        UserModel newUser=user;

        String newUsername = updateNewNameTF.getText();
        String newPassword = updateCategoryTF.getText();
        newUser.setUsername(newUsername);
        newUser.setPassword(newPassword);
        if (newUsername.isBlank()) {
            JOptionPane.showMessageDialog(null, "Enter email");
            return;
        }
        if (newPassword.isBlank()) {
            JOptionPane.showMessageDialog(null, "Enter password");
            return;
        }
        int userUpdate=updateUser(newUser);

        switch (userUpdate) {
            case USERNAME_ALREAD_IN_USE:
            break;
            case UPDATE_SUCCESSFUL:
            updateManagerTable();
            break;
            case UPDATE_UNSUCCESSFUL:

            break;
            default:
            break;
        }
    }//GEN-LAST:event_updateNewDishNameButtonActionPerformed

    private void updateNewNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNewNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateNewNameTFActionPerformed

    private void addDishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDishButtonActionPerformed
        addDeleteUpdateTabbedPanel.setSelectedComponent(addMenuDishButton);
        fillComboBox(addCategoryComboBox);
        
    }//GEN-LAST:event_addDishButtonActionPerformed

    private void deleteDishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDishButtonActionPerformed
        addDeleteUpdateTabbedPanel.setSelectedComponent(deleteDishPanel);
        fillComboBox(removeCategoryComboBox);
    }//GEN-LAST:event_deleteDishButtonActionPerformed

    private void updateDishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDishButtonActionPerformed
        addDeleteUpdateTabbedPanel.setSelectedComponent(updateMenuPanel);
        fillComboBox(updateCategoryComboBox);
    }//GEN-LAST:event_updateDishButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> addCategoryComboBox;
    private javax.swing.JLabel addCategoryLabel;
    private javax.swing.JPanel addDeleteUpdateDishButtonPanel;
    private javax.swing.JTabbedPane addDeleteUpdateTabbedPanel;
    private javax.swing.JButton addDishButton;
    private javax.swing.JLabel addDishNameLabel;
    private javax.swing.JTextField addDishNameTF;
    private javax.swing.JPanel addMenuDishButton;
    private javax.swing.JButton addNewDishButton;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel categoryButton;
    private javax.swing.JButton deleteDishButton;
    private javax.swing.JLabel deleteDishLabel;
    private javax.swing.JTextField deleteDishNameTF;
    private javax.swing.JPanel deleteDishPanel;
    private javax.swing.JButton deleteDishfromMenuButton;
    private javax.swing.JPanel headingLabel;
    private javax.swing.JLabel menuPageLabel;
    private javax.swing.JTable menuTable;
    private javax.swing.JScrollPane menuTableScrollPane;
    private javax.swing.JComboBox<String> removeCategoryComboBox;
    private javax.swing.JComboBox<String> updateCategoryComboBox;
    private javax.swing.JLabel updateCategoryLabel;
    private javax.swing.JButton updateDishButton;
    private javax.swing.JLabel updateDishNameButton;
    private javax.swing.JTextField updateDishNameTF;
    private javax.swing.JPanel updateMenuPanel;
    private javax.swing.JButton updateNewDishNameButton;
    private javax.swing.JLabel updateNewDishNameLabel;
    private javax.swing.JTextField updateNewNameTF;
    // End of variables declaration//GEN-END:variables

    private void fillComboBox(javax.swing.JComboBox<String> CB) {
        final String statement = "SELECT * from categories";
        try {
            PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(statement);
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                String category = resultSet.getString("name");
                CB.addItem(category);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManagerList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
